{"ast":null,"code":"// components/ServiceForm.js\nconst handleRegister = async () => {\n  setStatus('Processing...');\n  try {\n    const res = await axios.post('http://localhost:5000/api/users/register', {\n      username,\n      serviceType,\n      package: packageType,\n      duration\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setStatus(`Success! Service active until ${new Date(res.data.user.endTime).toLocaleDateString()}`);\n  } catch (err) {\n    var _err$response, _err$response$data, _err$response2;\n    const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Registration failed';\n    console.error('Registration error:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err);\n    setStatus(`Error: ${errorMessage}`);\n  }\n};","map":{"version":3,"names":["handleRegister","setStatus","res","axios","post","username","serviceType","package","packageType","duration","headers","Date","data","user","endTime","toLocaleDateString","err","_err$response","_err$response$data","_err$response2","errorMessage","response","message","console","error"],"sources":["D:/systembill/client/src/components/ServiceForm.js"],"sourcesContent":["// components/ServiceForm.js\r\nconst handleRegister = async () => {\r\n  setStatus('Processing...');\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/api/users/register', {\r\n      username,\r\n      serviceType,\r\n      package: packageType,\r\n      duration\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    setStatus(`Success! Service active until ${new Date(res.data.user.endTime).toLocaleDateString()}`);\r\n  } catch (err) {\r\n    const errorMessage = err.response?.data?.message || \r\n                        err.message || \r\n                        'Registration failed';\r\n    console.error('Registration error:', err.response?.data || err);\r\n    setStatus(`Error: ${errorMessage}`);\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjCC,SAAS,CAAC,eAAe,CAAC;EAC1B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,0CAA0C,EAAE;MACvEC,QAAQ;MACRC,WAAW;MACXC,OAAO,EAAEC,WAAW;MACpBC;IACF,CAAC,EAAE;MACDC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFT,SAAS,CAAC,iCAAiC,IAAIU,IAAI,CAACT,GAAG,CAACU,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE,CAAC;EACpG,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,cAAA;IACZ,MAAMC,YAAY,GAAG,EAAAH,aAAA,GAAAD,GAAG,CAACK,QAAQ,cAAAJ,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcL,IAAI,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBI,OAAO,KAC5BN,GAAG,CAACM,OAAO,IACX,qBAAqB;IACzCC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAE,EAAAL,cAAA,GAAAH,GAAG,CAACK,QAAQ,cAAAF,cAAA,uBAAZA,cAAA,CAAcP,IAAI,KAAII,GAAG,CAAC;IAC/Df,SAAS,CAAC,UAAUmB,YAAY,EAAE,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}